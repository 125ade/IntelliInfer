version: '3.7'

services:
#  nginx:
#    build:
#      context: ./nginx
#      dockerfile: Dockerfile.nginx
#    container_name: "nginx"
#    ports:
#      - '80:80'
#      - '443:443'
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf
#      - ./ssl_certificate.crt:/etc/nginx/ssl/ssl_certificate.crt
#      - ./ssl_certificate_key.key:/etc/nginx/ssl/ssl_certificate_key.key
#    depends_on:
#      api:
#        condition: service_healthy


  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: "api"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - logs_data:/app/logs
    expose:
      - "${API_PORT}"
    ports:
      - "${API_PORT}:${API_PORT}"
    restart: unless-stopped
    environment:
      - DOCKER_HOST=${DOCKER_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - DOKER_QUEUE_NAME=${DOKER_QUEUE_NAME}
      - API_PORT=${API_PORT}
      - API_HOST=${API_HOST}
      - NODE_ENV=production
      - LOG_OUTPUT=both # Pu√≤ essere 'console', 'file' o 'both'
      - LOG_PATH=/app/logs
      - LOG_ACCESS_DIR=access
      - LOG_ERRORS_DIR=errors
    networks:
      - private-ntwk
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://${API_HOST}:${API_PORT}/check/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3


  database:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: "database"
    restart: always
    expose:
      - "${POSTGRES_PORT}"
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - private-ntwk
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_DB}" ]
      interval: 30s
      timeout: 3s
      retries: 3



  redis:
    build:
      context: ./redis
      dockerfile: Dockerfile.redis
    container_name: "redis"
    restart: always
    expose:
      - "${REDIS_PORT}"
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis_data:/data
    networks:
      - private-ntwk
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3



#  yolo:
#    build:
#      context: ./neural_network/yolo
#      dockerfile: Dockerfile
#
#  rcnn:
#    build:
#      context: ./neural_network/rcnn
#      dockerfile: Dockerfile


  test_inference:
    build:
      context: ./neural_network/test_inference
      dockerfile: Dockerfile
    container_name: "test_inference"


networks:
  private-ntwk:
    driver: bridge
    name: private-ntwk


volumes:
  redis_data:
  postgres_data:
  logs_data:
